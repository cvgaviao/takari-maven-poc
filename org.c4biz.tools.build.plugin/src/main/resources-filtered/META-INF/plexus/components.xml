<!-- #%L Lunifera Tools - OSGi Subsystem Artifact Generator Maven Plugin 
    %% Copyright (C) 2012 - 2015 C4biz Softwares ME, Cristiano GaviÃ£o %% This 
    program and the accompanying materials are made available under the terms 
    of the Eclipse Public License v1.0 and Eclipse Distribution License v. 1.0 
    which accompanies this distribution. The Eclipse Public License is available 
    at http://www.eclipse.org/legal/epl-v10.html and the Eclipse Distribution 
    License is available at http://www.eclipse.org/org/documents/edl-v10.php. 
    #L% -->

<component-set>
    <components>
        <component>
            <role>org.apache.maven.artifact.handler.ArtifactHandler
            </role>
            <role-hint>bundle</role-hint>
            <implementation>org.apache.maven.artifact.handler.DefaultArtifactHandler
            </implementation>
            <configuration>
                <type>bundle</type>
                <includesDependencies>true</includesDependencies>
                <language>java</language>
                <extension>jar</extension>
                <addedToClasspath>true</addedToClasspath>
                <packaging>bundle</packaging>
            </configuration>
        </component>
        <component>
            <role>org.codehaus.plexus.archiver.Archiver</role>
            <role-hint>zip</role-hint>
            <implementation>
                org.codehaus.plexus.archiver.zip.ZipArchiver
            </implementation>
            <instantiation-strategy>singleton</instantiation-strategy>
            <!-- <instantiation-strategy>per-lookup</instantiation-strategy> -->
        </component>
        <component>
            <role>org.codehaus.plexus.archiver.Archiver</role>
            <role-hint>tar</role-hint>
            <implementation>
                org.codehaus.plexus.archiver.tar.TarArchiver
            </implementation>
            <instantiation-strategy>singleton</instantiation-strategy>
            <!-- <instantiation-strategy>per-lookup</instantiation-strategy> -->
        </component>
        <component>
            <role>org.apache.maven.lifecycle.mapping.LifecycleMapping
            </role>
            <role-hint>containerPack</role-hint>
            <implementation>org.apache.maven.lifecycle.mapping.DefaultLifecycleMapping
            </implementation>
            <configuration>
                <lifecycles>
                    <lifecycle>
                        <id>default</id>
                        <!-- START SNIPPET: bundle-lifecycle -->
                        <phases>
                            <validate>
                                io.takari.maven.plugins:takari-lifecycle-plugin:${takari.version}:update-check
                            </validate>
                            <generate-resources>
                                ${project.groupId}:${project.artifactId}:${project.version}:generateContainerFolder
                            </generate-resources>
                            <process-resources>
                                <!-- org.apache.maven.plugins:maven-resources-plugin:resources -->
                                io.takari.maven.plugins:takari-lifecycle-plugin:${takari.version}:process-resources
                            </process-resources>
                            <!-- <compile>org.apache.maven.plugins:maven-compiler-plugin:compile</compile> -->
                            <!-- <process-test-resources>org.apache.maven.plugins:maven-resources-plugin:testResources</process-test-resources> -->
                            <!-- <test-compile>org.apache.maven.plugins:maven-compiler-plugin:testCompile</test-compile> -->
                            <!-- <test>org.apache.maven.plugins:maven-surefire-plugin:test</test> -->
                            <package>
                                ${project.groupId}:${project.artifactId}:${project.version}:generateContainerArchive
                            </package>
                            <install>
                                <!-- org.apache.maven.plugins:maven-install-plugin:install -->
                                io.takari.maven.plugins:takari-lifecycle-plugin:${takari.version}:install
                            </install>
                            <deploy>
                                <!-- org.apache.maven.plugins:maven-deploy-plugin:deploy -->
                                io.takari.maven.plugins:takari-lifecycle-plugin:${takari.version}:deploy
                            </deploy>
                        </phases>
                        <!-- END SNIPPET: bundle-lifecycle -->
                    </lifecycle>
                </lifecycles>
            </configuration>
        </component>
        <component>
            <role>org.apache.maven.artifact.handler.ArtifactHandler
            </role>
            <role-hint>containerPack</role-hint>
            <implementation>org.apache.maven.artifact.handler.DefaultArtifactHandler
            </implementation>
            <configuration>
                <!--the type used when specifying dependencies etc. -->
                <type>containerPack</type>
                <includesDependencies>true</includesDependencies>
                <language>java</language>
                <!--the extension used by Maven in the repository -->
                <extension>zip</extension>
                <!--the packaging used when declaring an implementation of 
                    the packaging -->
                <packaging>containerPack</packaging>
                <addedToClasspath>false</addedToClasspath>
            </configuration>
        </component>
    </components>
</component-set>
